## Common
alias ll="ls -al"
alias l="ls"

alias zshrc="vim ~/.zshrc && source ~/.zshrc"
alias vimrc="vim ~/.vimrc"
alias tmuxrc="vim ~/.tmux.conf && tmux source-file ~/.tmux.conf"

alias bat="batcat"
alias jqk="jq '. | keys'"
alias vssh="vagrant ssh "

## Go 
export PATH=$PATH:/usr/local/go/bin
export GOPATH=$HOME/go
export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"

## Kubernetes
[[ $commands[kubectl] ]] && source <(kubectl completion zsh)
alias k="kubectl"

alias kgp="kubectl get po"
alias po="kubectl get po -o wide"
alias kgs="kubectl get svc"
alias svc="kubectl get svc -o wide"
alias kgn="kubectl get no"
alias no="kubectl get no -o wide"

alias kdp="kubectl describe pod"
alias kl="kubectl logs"

alias watch="watch "
alias kw="watch kubectl get"
alias kwp="watch kubectl get pod"
alias kwpo="watch kubectl get pod -o wide"
alias kwn="watch kubectl get node"
alias kwno="watch kubectl get node -o wide"
alias kwa="watch kubectl get all"
alias kwao="watch kubectl get all -o wide"
alias watchcontext='watch "kubectl config view --minify | grep -i 'current-context'; kubectl config view --minify | grep -i 'namespace'; kubectl get pod,svc,job,deployment,sc,pv,pvc,secret,ep"'

alias kapp="kubectl apply -f"
alias kdel="kubectl delete -f"
alias kn="kubectl config set-context --current --namespace"
alias ku="kubectl config use-context"

export do="--dry-run=client -o yaml"
export gf="--grace-period=0 --force"

alias ks="kubectl -n kube-system"
alias km="kubectl -n monitoring"
alias kerr="kubectl get pods --field-selector=status.phase!=Running --all-namespaces"

alias kerr="kubectl get pods --field-selector=status.phase!=Running --all-namespaces"

alias deltesk="kubectl delete jobs --all; kubectl get pvc -n default --no-headers=true -o=custom-columns='NAME:.metadata.name' | awk '/task-/{print $1}'| xargs  kubectl delete -n default pvc" 
alias kkill="kubectl delete --grace-period=0 --force"

## gobench setup
alias db="docker-compose build"
alias dp="docker-compose push"
alias dbp="db && dp"
alias gos0="GOBENCH_ID="gobench-s0" GOBENCH_PORT="8080" GOBENCH_WORKMODEL="/kubedata/workmodel.json" go run ."
